function RIR_Analyzer()
    clear global
    GUI_Config();
end

function GUI_Config()
    audiointerface = audiodevinfo;
    inlgth = length(audiointerface.input);
    inName = cell(1,inlgth);

    for count = 1:inlgth
        inName{count} = char(audiointerface.input(count).Name);
    end

    ejes = get(0, 'ScreenSize');
    ancho = ejes(3);
    alto = ejes(4);

    d = dialog('Position',[(ancho/2)-230 (alto/2)-160 460 320],'Name','Configuracion de Proyecto'); 

    uicontrol('Parent',d,...
               'Style','text',...
               'FontSize',11,...
               'Position',[20 320-40 200 25],...
               'String','Ingrese nombre del proyecto:');

    edit_projname = uicontrol('Parent',d,...
               'Style','edit',...
               'Position',[25 320-65 185 25],...
               'FontSize',11,...
               'HorizontalAlignment','left',...
               'String','');

    uicontrol('Parent',d,...
               'Style','text',...
               'FontSize',11,...
               'Position',[20 320-100 220 25],...
               'String','Seleccione la entrada de audio:');

    listbox_audioin = uicontrol('Parent',d,...
               'Style','list',...
               'Position',[25 320-250 410 150],...
               'FontSize',10,...
               'String',inName',...
               'HorizontalAlignment','left');

    uicontrol('Parent',d,...
               'Position',[317 20 120 30],...
               'FontSize',11,...
               'String','Crear',...
               'Callback',{@projConfig,edit_projname,listbox_audioin});

    uicontrol('Parent',d,...
               'Position',[187 20 120 30],...
               'FontSize',11,...
               'String','Cancelar',...
               'Callback','delete(gcf)'); 
end

function projConfig(~,~,folderName,aiID)
    global folder;
    global audiointerface;
    
    audiointerface = aiID.Value;
    folder = folderName.String;

    if(isempty(folder))
        
        uiwait(msgbox('Es necesario ingresar un nombre a la carpeta de proyecto','ERROR'));  
        return
        
    else

        if(exist(folder,'dir'))
            uiwait(msgbox('El nombre de proyecto ya existe.'));
            return
        else
            mkdir(folder);
            root = cd;
            cd(folder);
            mkdir('raw_files');
            mkdir('recorded');
            cd(root);
            delete(gcf);
            GUI();
            return
            
        end
    end
end

function GUI()
    global folder handles;

    %Extraccion de dimensiones de pantalla
    ejes = get(0, 'ScreenSize');
    ancho = ejes(3); %Pixeles horizontales
    alto = ejes(4); %Pixeles verticales

    d = dialog('Position',[(ancho/2)-550 (alto/2)-300 1100 600],'Name',folder); 

    tabgp = uitabgroup(d,'Position',[.02 .02 .96 .96]);
    tab1 = uitab(tabgp,'Title','Adquisicion de Datos');
    tab2 = uitab(tabgp,'Title','Procesamiento de Datos');
    
    [x,~]=imread('UNTREF.jpg');
    I2=imresize(x, [84 226]);
    uicontrol('parent',tab1,...
            'style','pushbutton',...
            'units','pixels',...
            'position',[20 20 226 70],...
            'cdata',I2);

    % Campos y textos

        % Ruido Rosa
    panel_pink = uipanel('parent',tab1,...
                   'BorderWidth',2,...
                   'FontSize',9,...
                   'position',[.1 .45 .22 .38],...
                   'Title','Ruido Rosa');   

    edit_pinktime = uicontrol('Parent',panel_pink,...
                   'Style','edit',...
                   'Position',[50 136 100 25],...
                   'FontSize',11,...
                   'HorizontalAlignment','left',...
                   'String','');
               
    uicontrol('Parent',panel_pink,...
                   'Style','text',...
                   'FontSize',11,...
                   'Position',[20 165 180 25],...
                   'String','Tiempo de duracion:');
                       
               
    uicontrol('Parent',tab1,...
                   'Style','text',...
                   'FontSize',14,...
                   'Position',[135 465 180 25],...
                   'String','Calibracion:');

    uicontrol('Parent',tab1,...
                   'Style','text',...
                   'FontSize',14,...
                   'Position',[600 465 360 25],...
                   'String','Adquisicion de Datos:');
               
    uicontrol('Parent',panel_pink,...
                   'Style','text',...
                   'FontSize',10,...
                   'Position',[150 129 20 30],...
                   'String','[s]');

    edit_pikdelay = uicontrol('Parent',panel_pink,...
                   'Style','edit',...
                   'Position',[85 75 30 25],...
                   'FontSize',11,...
                   'HorizontalAlignment','left',...
                   'String','0');
               
    uicontrol('Parent',panel_pink,...
                   'Style','text',...
                   'FontSize',10,...
                   'Position',[17 100 180 20],...
                   'String','Tiempo de espera:');
               
    uicontrol('Parent',panel_pink,...
                   'Style','text',...
                   'FontSize',10,...
                   'Position',[116 67 20 30],...
                   'String','[s]');
               
    btn_pink = uicontrol('Parent',panel_pink,...
                   'Position',[45 12 120 25],...
                   'FontSize',11,...
                   'String','Reproducir',...
                   'Callback',{@PinkNoise,edit_pinktime,edit_pikdelay,0});
               
    uicontrol('Parent',panel_pink,...
                   'Position',[1000 1000 120 25],...
                   'FontSize',11,...
                   'String','Graficar',...
                   'Callback',{@PinkNoise,edit_pinktime,edit_pikdelay,1});  

       % Sine Sweep

    panel_sine = uipanel('parent',tab1,...
                   'BorderWidth',2,...
                   'FontSize',9,...
                   'position',[.53 .26 .40 .58],...
                   'Title','Sine Sweep y Recoleccion de datos');

    uicontrol('Parent',panel_sine,...
                   'Style','text',...
                   'FontSize',11,...
                   'Position',[10 255 160 30],...
                   'String','Tiempo de duracion:');
               
    edit_sinetime = uicontrol('Parent',panel_sine,...
                   'Style','edit',...
                   'FontSize',11,...
                   'HorizontalAlignment','left',...
                   'Position',[30 235 100 25],...
                   'String','');
               
    uicontrol('Parent',panel_sine,...
                   'Style','text',...
                   'FontSize',10,...
                   'Position',[130 227 22 30],...
                   'String','[s]');

    uicontrol('Parent',panel_sine,...
                   'Style','text',...
                   'FontSize',11,...
                   'Position',[10 185 150 30],...
                   'String','Frecuencia Inicial:');
               
    edit_sinew1 = uicontrol('Parent',panel_sine,... 
                   'Style','edit',...
                   'FontSize',11,...
                   'HorizontalAlignment','left',...
                   'Position',[30 165 100 25],...
                   'String','');
    uicontrol('Parent',panel_sine,...
                   'Style','text',...
                   'FontSize',10,...
                   'Position',[130 162 30 25],...
                   'String','[Hz]');

    uicontrol('Parent',panel_sine,...
                   'Style','text',...
                   'FontSize',11,...
                   'Position',[10 115 150 30],...
                   'String','Frecuencia Final:');
               
    edit_sinew2 = uicontrol('Parent',panel_sine,... 
                   'Style','edit',...
                   'FontSize',11,...
                   'HorizontalAlignment','left',...
                   'Position',[30 95 100 25],...
                   'String','');
               
    uicontrol('Parent',panel_sine,...
                   'Style','text',...
                   'FontSize',10,...
                   'Position',[130 92 30 25],...
                   'String','[Hz]');
               
    uicontrol('Parent',panel_sine,...
                   'Style','text',...
                   'FontSize',11,...
                   'Position',[210 255 160 30],...
                   'String','Nombre de Archivo:');
               
    edit_filename = uicontrol('Parent',panel_sine,...
                   'Style','edit',...
                   'FontSize',11,...
                   'Position',[210 235 160 25],...
                   'HorizontalAlignment','left',...
                   'String','');
               
    edit_sinedelay = uicontrol('Parent',panel_sine,...
                   'Style','edit',...
                   'Position',[270 165 30 25],...
                   'FontSize',11,...
                   'HorizontalAlignment','left',...
                   'String','0');
               
    uicontrol('Parent',panel_sine,...
                   'Style','text',...
                   'FontSize',10,...
                   'Position',[200 195 180 20],...
                   'String','Tiempo de espera:');
               
    uicontrol('Parent',panel_sine,...
                   'Style','text',...
                   'FontSize',10,...
                   'Position',[301 162 20 25],...
                   'String','[s]');
               
    edit_nderepe = uicontrol('Parent',panel_sine,...
                   'Style','edit',...
                   'Position',[270 98 30 25],...
                   'FontSize',11,...
                   'HorizontalAlignment','left',...
                   'String','1');   

    uicontrol('Parent',panel_sine,...
                   'Style','text',...
                   'FontSize',10,...
                   'Position',[200 125 180 20],...
                   'String','Número de repeticiones:');         

    btn_record = uicontrol('Parent',panel_sine,...
                   'Position',[130 15 160 28],...
                   'FontSize',11,...
                   'String','Iniciar',...
                   'Callback',{@SineSweep,edit_sinetime,edit_sinew1,edit_sinew2,edit_filename,edit_sinedelay,edit_nderepe,0});
               
    uicontrol('Parent',panel_sine,...
                   'Position',[1000 1000 160 28],...
                   'FontSize',11,...
                   'String','Graficar',...
                   'Callback',{@SineSweep,edit_sinetime,edit_sinew1,edit_sinew2,edit_filename,edit_sinedelay,edit_nderepe,1});
               
    uicontrol('Parent',panel_sine,...
                   'Position',[1000 1000 160 28],...
                   'FontSize',11,...
                   'String','Convolucion con F.I',...
                   'Callback',{@SineSweep,edit_sinetime,edit_sinew1,edit_sinew2,edit_filename,edit_sinedelay,edit_nderepe,2});


         % Botones especiales

    uicontrol('Parent',tab1,...
                   'Position',[880 15 150 40],...
                   'FontSize',11,...
                   'String','Cerrar',...
                   'Callback','delete(gcf),clear sound');          

    uicontrol('Parent',tab1,...
                   'Position',[134 190 175 40],...
                   'FontSize',11,...
                   'String','Detener Reproduccion',...
                   'Callback',{@StopSound,btn_record,btn_pink});

         % Procesamiento de Datos
         
    axes('Parent',tab2,...
            'Position',[0.05 .47 .74 .48],'Box','on');   
         
    btn_load_audio = uicontrol('Parent',tab2,...
                   'Position',[878 490 155 40],...
                   'FontSize',11,...
                   'String','Cargar RIR Monoaural',...
                   'Callback',{@btnns});
               
    %La variable global "handles" es una estructura que contendra toda la
    %informacion correspondiente a la gui, a los audios en crudo y a los
    %resultados del procesamiento de los audios, en tres sub-estructuras
    %diferentes, a saber: gui, audio_data, results.
    
    gui=struct;
    handles.gui=gui;
    handles.gui.btn_load_audio=btn_load_audio;     
    
    btn_load_audioST = uicontrol('Parent',tab2,...
                   'Position',[878 440 155 40],...
                   'FontSize',11,...
                   'String','Cargar RIR Binaural',...
                   'Callback',{@btnnsST});
               
    handles.gui.btn_load_audioST=btn_load_audioST;
    
    uicontrol('Parent',tab2,...
                   'Style','text',...
                   'FontSize',11.5,...
                   'Position',[850 405 200 20],...
                   'String','Tipo de Filtro:','HorizontalAlignment','center');  

    kind = uicontrol('parent',tab2,'Style', 'popup',... % Menu desplegable para elegir octava o tercio
           'String', {'Octava','1/3 de Octava'},...
           'Position', [880 370 150 30],'Callback',{@kind_});

    handles.gui.kind = kind;

    uicontrol('Parent',tab2,...
                   'Style','text',...
                   'FontSize',11.5,...
                   'Position',[850 335 200 20],...
                   'String','Graficar banda:','HorizontalAlignment','center'); 
               
    band_selection = uicontrol('parent',tab2,'Style', 'popup',... % Menu desplegable para elegir banda de frecuencia a graficar
           'String', {'Cargue Archivo'},...
           'Position', [880 300 150 30],'Callback',{@Graphx});

    handles.gui.band_selection = band_selection; % la meto en la estructura handles

    
    panel_window = uipanel('parent',tab2,...
                   'BorderWidth',2,...
                   'FontSize',9,...
                   'position',[.832 .3 .160 .23],...
                   'Title','Ventana Mediana Movil');
               
    recom='<HTML>Recomendada [(1/f<sub>s</sub>) * f<sub>min</sub>]';	
  
    rb1_window = uicontrol('Parent',panel_window,...
                   'Style','radiobutton',...
                   'FontSize',8,...
                   'Position',[5 75 200 30],...
                   'String',recom);
               
    rb2_window = uicontrol('Parent',panel_window,...
                   'Style','radiobutton',...
                   'FontSize',8,...
                   'Position',[5 46 200 30],...
                   'String','Personalizada:'); 

    edit_window = uicontrol('Parent',panel_window,...
                   'Style','edit',...
                   'FontSize',8,...
                   'Position',[102 50 35 20],...
                   'HorizontalAlignment','left',...
                   'String','','Enable','off','Callback',@WindowEdit);
               
    uicontrol('Parent',panel_window,...
                   'Style','text',...
                   'FontSize',8,...
                   'Position',[4 0.2 140 40],...
                   'String','(Presione enter para aplicar la ventana personalizada)');     

    handles.gui.rb1_window = rb1_window;
    handles.gui.rb2_window = rb2_window;
    handles.gui.edit_window = edit_window;           
    set(rb1_window,'Callback',{@rb1});
    set(rb2_window,'Callback',{@rb2});            

    btn_refresh = uicontrol('Parent',tab2,...
                    'Position',[880 105 150 40],...
                    'FontSize',11,...
                    'String','Borrar todo',...
                    'Callback',{@Refresh});
 
    handles.gui.btn_refresh=btn_refresh;
    
    uicontrol('Parent',tab2,...
                   'Position',[880 15 150 40],...
                   'FontSize',11,...
                   'String','Cerrar',...
                   'Callback','delete(gcf),clear sound');
    btn_Export = uicontrol('Parent',tab2,...
                   'Position',[880 60 150 40],...
                   'FontSize',11,...
                   'String','Exportar resultados','Callback',{@ExcelExport});

    handles.gui.btn_Export=btn_Export;
    

    %%%%%%%%%%% tabla de resultados %%%%%%%
    
    panel_results = uipanel('parent',tab2,...
               'BorderWidth',2,...
               'FontSize',9,...
               'position',[.015 .02 .8 .37],...
               'Title','Resultados'); 
           
    uicontrol('Parent',tab2,...
               'Style','text',...
               'FontSize',9,...
               'Position',[80 525 120 20],...
               'String','Curva de decaimiento','HorizontalAlignment','right');         
           
    
           
    handles.gui.panel_results=panel_results;

    Refresh(0,0);

end

function rb1(~,~)
    global handles;
    
    %funcion del boton radio 1 (seleccion de ventana de filtro de mediana)
    set(handles.gui.rb1_window,'Value',1);
    set(handles.gui.edit_window,'Enable','off');
    set(handles.gui.edit_window,'String','');
    set(handles.gui.rb2_window,'Value',0);
    drawnow;

    if isfield(handles,'audio_data')==1
        %WindowChange es la variable que indica que hubo un cambio en la
        %ventana del filtro (0 si no lo hubo, 1 si lo hubo)
        handles.gui.WindowChange=1;
        ProcessCalc(0,0);
    end

end

function rb2(~,~)
    global handles;
    
    %funcion del boton radio 2 (seleccion de ventana de filtro de mediana)
    set(handles.gui.rb2_window,'Value',1);
    set(handles.gui.edit_window,'Enable','on');
    set(handles.gui.rb1_window,'Value',0);
    drawnow;

    if isfield(handles,'audio_data')==1
        if isempty(handles.gui.edit_window.String)==1 || sum(isspace(handles.gui.edit_window.String))>=1
            msgbox('Debe seleccionar una ventana para el filtro de mediana movil') %si no se selecciono nada en el cuadro de texto
        end
    end   
    
  
end

function WindowEdit(~,~)
    global handles;
     
    %funcion que se ejecuta al editar el cuadro de texto correspondiente a
    %la ventana del filtro de mediana movil, al presionar enter
    if isempty(handles.gui.edit_window.String)==1 || sum(isspace(handles.gui.edit_window.String))>=1
        msgbox('Debe seleccionar una ventana para el filtro de mediana movil');

    elseif isnan(str2double(handles.gui.edit_window.String))==1
        msgbox('Error: seleccione el tamaño de la ventana con un número');

    else
        if isfield(handles,'audio_data')==1
            %WindowChange es la variable que indica que hubo un cambio en la
            %ventana del filtro (0 si no lo hubo, 1 si lo hubo)
            handles.gui.WindowChange=1;
            ProcessCalc(0,0);
        else
            msgbox('Cargar RIRs para continuar');
        end
    end
       
 

end

function btnns(~,~)
    global handles;

    %funcion que se ejecuta al presionar el boton de carga de audios mono
    set(handles.gui.btn_load_audio,'Value',1);
    set(handles.gui.btn_load_audioST,'Value',0);

    ProcessMain(0,0);
end
 
function btnnsST(~,~)
    global handles;

    %funcion que se ejecuta al presionar el boton de carga de audios
    %estereo
    set(handles.gui.btn_load_audioST,'Value',1);
    set(handles.gui.btn_load_audio,'Value',0);

    ProcessMain(0,0);
end

function kind_(~,~)
    global handles;

    %funcion que se ejecuta al cambiar el tipo de filtrado por oct/tercios
    if isempty(handles.gui.table_results.Data)==1
    else
        %KindChange es la variable que indica que hubo un cambio en el tipo de filtro
        %(0 si no lo hubo, 1 si lo hubo)        
        handles.gui.KindChange=1;
        ProcessCalc(0,0);   
    end
end    

function Refresh(~,~)
    global handles;
    
    %funcion del boton de "borrar todo", refresca la tabla y el grafico y
    %borra los resultados almacenados, si los hay.
    datatabla = [];
    if handles.gui.kind.Value==1 
    cnames = {'31,5 Hz','63 Hz','125 Hz','250 Hz','500 Hz','1000 Hz','2000 Hz','4000 Hz','8000 Hz','16000 Hz'};
    else
    cnames = {'25 Hz','31,5 Hz','40 Hz','50 Hz','63 Hz','80 Hz','100 Hz',...
            '125 Hz','160 Hz','200 Hz','250 Hz','315 Hz','400 Hz','500 Hz',...
            '630 Hz','800 Hz','1000 Hz','1250 Hz','1600 Hz','2000 Hz',...
            '2500 Hz','3150 Hz','4000 Hz','5000 Hz','6300 Hz','8000 Hz',...
            '10000 Hz','12500 Hz','16000 Hz','20000 Hz'};
    end
    EDT='EDT [s]';
    T10='T10 [s]';
    T20='T20 [s]';
    T30='T30 [s]';
    D50='D50';
    C50='C50 [dB]';
    C80='C80 [dB]';
    Tt='Tt [s]';
    EDTt='EDTt [s]';
    IACC='IACC Early';
    rnames = {EDT,T10,T20,T30,D50,C50,C80,Tt,EDTt,IACC};

    table_results = uitable(handles.gui.panel_results,'Data',datatabla,...
                                'Position',[20 20 790 150],...
                                'ColumnName',cnames,... 
                                'RowName',rnames,...
                                'ColumnWidth',{66});

    
    handles.gui.table_results = table_results; 
         
    handles.gui.WindowChange = 0; 
    handles.gui.KindChange = 0;
    
    set(handles.gui.btn_Export,'Enable','off');
    set(handles.gui.btn_refresh,'Enable','off');
    set(handles.gui.band_selection,'Enable','off','String',{'Cargue Archivo'});
    cla('reset')
    grid on
    box on

    if isfield(handles,'results')==1
         handles = rmfield(handles,'results');
    end
    
    if isfield(handles,'audio_data')==1
         handles = rmfield(handles,'audio_data');
    end

end